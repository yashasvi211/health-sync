import React, { useState, useEffect } from "react";
import { View, Text, StyleSheet, Image, Button, Alert } from "react-native"; // Import Alert
import { SafeAreaView } from "react-native-safe-area-context";
import { initializeApp } from "@firebase/app";
import {
  getFirestore,
  collection,
  addDoc,
  doc,
  setDoc,
  getDocs, // Import getDocs
} from "@firebase/firestore";

// Firebase configuration
const firebaseConfig = {
  apiKey: "AIzaSyDOcckDgNR3PETeXuxpQDjfjUi4-3qQnaQ",
  authDomain: "health-sync-cdc19.firebaseapp.com",
  databaseURL: "https://health-sync-cdc19-default-rtdb.firebaseio.com",
  projectId: "health-sync-cdc19",
  storageBucket: "health-sync-cdc19.appspot.com",
  messagingSenderId: "240815674969",
  appId: "1:240815674969:web:b0934364bfe137f6fc4348",
};

// Initialize Firebase
initializeApp(firebaseConfig);

const App = () => {
  const [doctors, setDoctors] = useState([]);

  // Function to fetch doctors data from Firestore
  const fetchDoctors = async () => {
    const db = getFirestore();
    const doctorsCollection = collection(db, "doctors");
    const querySnapshot = await getDocs(doctorsCollection);
    const fetchedDoctors = [];
    querySnapshot.forEach((doc) => {
      fetchedDoctors.push({ id: doc.id, ...doc.data() });
    });
    setDoctors(fetchedDoctors);
  };

  useEffect(() => {
    fetchDoctors();
  }, []);

  // Function to add dummy data
  const addDummyData = async () => {
    const db = getFirestore();
    const doctorsCollection = collection(db, "doctors");

    const dummyDoctors = [
      {
        name: "Piool Agori",
        experience: 25,
        address: "123456 Popopop",
        imageURL: "asas",
      },
      {
        name: "Pillo Pillowwala",
        experience: 215,
        address: "Popopopopop",
        imageURL: "1234",
      },
    ];

    dummyDoctors.forEach(async (doctor) => {
      await addDoc(doctorsCollection, doctor);
    });

    fetchDoctors();

    Alert.alert("Data Added", "Dummy data has been added successfully!");
  };

  const renderDoctors = () => {
    if (doctors.length === 0) {
      return <Text>Loading...</Text>;
    }

    return doctors.map((doctor) => (
      <View key={doctor.id} style={styles.doctorContainer}>
        <Text>Name: {doctor.name}</Text>
        <Text>Experience: {doctor.experience} years</Text>
        <Text>Address: {doctor.address}</Text>
        <Image source={{ uri: doctor.imageURL }} style={styles.image} />
      </View>
    ));
  };

  return (
    <SafeAreaView style={styles.container}>
      <Text style={styles.heading}>Doctors</Text>
      <Button title="Add Data" onPress={addDummyData} />
      {renderDoctors()}
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: "#fff",
  },
  heading: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  doctorContainer: {
    marginBottom: 20,
  },
  image: {
    width: 200,
    height: 200,
    resizeMode: "cover",
    marginBottom: 10,
  },
});

export default App;
