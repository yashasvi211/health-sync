// doc_list.js
import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  Image,
  ScrollView,
  TouchableOpacity,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { initializeApp } from "firebase/app";
import { getFirestore, collection, getDocs } from "firebase/firestore";
import Prheader from "../../components/Header";
import { Link } from "expo-router";

const firebaseConfig = {
  apiKey: "AIzaSyDOcckDgNR3PETeXuxpQDjfjUi4-3qQnaQ",
  authDomain: "health-sync-cdc19.firebaseapp.com",
  databaseURL: "https://health-sync-cdc19-default-rtdb.firebaseio.com",
  projectId: "health-sync-cdc19",
  storageBucket: "health-sync-cdc19.appspot.com",
  messagingSenderId: "240815674969",
  appId: "1:240815674969:web:b0934364bfe137f6fc4348",
};

initializeApp(firebaseConfig);

const App = () => {
  const [specialist, setSpecialist] = useState("gynecologists");
  const [doctors, setDoctors] = useState([]);

  const fetchDoctors = async () => {
    const db = getFirestore();
    const doctorsCollection = collection(db, specialist);
    const querySnapshot = await getDocs(doctorsCollection);
    const fetchedDoctors = [];
    querySnapshot.forEach((doc) => {
      fetchedDoctors.push({ id: doc.id, ...doc.data() });
    });
    setDoctors(fetchedDoctors);
  };

  useEffect(() => {
    fetchDoctors();
  }, []);

  const renderDoctors = () => {
    if (doctors.length === 0) {
      return <Text>Loading...</Text>;
    }
    return doctors.map((doctor) => (
      <Link key={doctor.id} href="/doc" asChild>
        <TouchableOpacity style={styles.touchable}>
          <View style={styles.doctorContainer}>
            <View style={styles.infoContainer}>
              <Text style={styles.name}>{doctor.name}</Text>
              <Text style={styles.specialist}>{doctor.specialist}</Text>
              <Text style={styles.phone}>{doctor.contact}</Text>
              <Text>{doctor.id}</Text>
            </View>
            <View style={styles.imageContainer}>
              <Image source={{ uri: doctor.imageURL }} style={styles.image} />
            </View>
          </View>
        </TouchableOpacity>
      </Link>
    ));
  };

  return (
    <SafeAreaView style={styles.container}>
      <Prheader Add={"/list"} Name={"Doctor"} />
      <ScrollView>{renderDoctors()}</ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#ffffff",
    elevation: 5,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 3.84,
  },
  heading: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 20,
  },
  doctorContainer: {
    flexDirection: "row",
    marginBottom: 20,
    alignItems: "center",
  },
  imageContainer: {
    marginLeft: 10,
  },
  image: {
    width: 100,
    height: 100,
    resizeMode: "cover",
    borderRadius: 50,
  },
  infoContainer: {
    flex: 1,
    marginRight: 10,
  },
  name: {
    fontSize: 18,
    fontWeight: "bold",
    marginBottom: 5,
  },
  specialist: {
    fontSize: 16,
    marginBottom: 5,
  },
  phone: {
    fontSize: 14,
    color: "gray",
    marginBottom: 5,
  },
  description: {
    fontSize: 14,
    marginBottom: 5,
  },
  touchable: {
    marginHorizontal: 10, // Adjust this value according to your preference
  },
});

export default App;
